package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol  s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER;
terminal TokenC3D IGUAL_IGUAL, DIFERENTE, MAYOR, MENOR, MAYOR_IGUAL, MENOR_IGUAL;
terminal TokenC3D AND, OR, NOT;
nonterminal NodoC3D inicial, expresion, expresion2,expresion3;

precedence left OR;
precedence left AND;
precedence right NOT;
precedence left  IGUAL_IGUAL, DIFERENTE, MAYOR, MENOR, MAYOR_IGUAL, MENOR_IGUAL;
precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT; 

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} expresion3:exp 
                    {:  System.out.println("Cadena Aceptada");
                        String c3d = exp.getCad()+"\n\nVerdaderas = "+exp.getEtqV()+";\nFalsas = "+exp.getEtqF()+";";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(c3d);
                    :};



expresion3 ::=  expresion3:izq OR expresion3:der
					{: 
                        String c3d = izq.getCad() + izq.getEtqF()+":\n"+der.getCad();
                        RESULT = new NodoC3D(c3d,izq.getEtqV()+","+der.getEtqV(),der.getEtqF());
                    :}
			|	expresion3:izq AND expresion3:der
					{: 

                        String c3d = izq.getCad() + izq.getEtqV()+":\n"+der.getCad();
                        RESULT = new NodoC3D(c3d,der.getEtqV(),izq.getEtqF()+","+der.getEtqF());
                    :}
			|	NOT expresion3:izq
					{: 
                        RESULT = new NodoC3D(izq.getCad(), izq.getEtqF(),izq.getEtqV()); 
                    :}
            | 	expresion2:izq
            	{:
            		RESULT = izq;
            	:}
            ;

expresion2 ::=  expresion:izq IGUAL_IGUAL expresion:der
					{: 
                        String etqV = ControlC3D.generarETQ();
                        String etqF = ControlC3D.generarETQ();
                        String c3d = "if " + izq.getCad() + " == " + der.getCad() + " then goto "+etqV+";\n";
                        c3d += "goto "+etqF+";\n";
                         
                        RESULT = new NodoC3D(c3d,etqV,etqF); 
                    :}
			|	expresion:izq DIFERENTE expresion:der
					{: 
                        String etqV = ControlC3D.generarETQ();
                        String etqF = ControlC3D.generarETQ();
                        String c3d = "if " + izq.getCad() + " != " + der.getCad() + " then goto "+etqV+";\n";
                        c3d += "goto "+etqF+";\n";
                         
                        RESULT = new NodoC3D(c3d,etqV,etqF);
                    :}
			| 	expresion:izq MAYOR expresion:der
					{: 
                        String etqV = ControlC3D.generarETQ();
                        String etqF = ControlC3D.generarETQ();
                        String c3d = "if " + izq.getCad() + " > " + der.getCad() + " then goto "+etqV+";\n";
                        c3d += "goto "+etqF+";\n";
                         
                        RESULT = new NodoC3D(c3d,etqV,etqF);
                    :}
			|	expresion:izq MENOR expresion:der
					{: 
                        String etqV = ControlC3D.generarETQ();
                        String etqF = ControlC3D.generarETQ();
                        String c3d = "if " + izq.getCad() + " < " + der.getCad() + " then goto "+etqV+";\n";
                        c3d += "goto "+etqF+";\n";
                         
                        RESULT = new NodoC3D(c3d,etqV,etqF);
                    :}
			|	expresion:izq MAYOR_IGUAL expresion:der
					{: 
                        String etqV = ControlC3D.generarETQ();
                        String etqF = ControlC3D.generarETQ();
                        String c3d = "if " + izq.getCad() + " >= " + der.getCad() + " then goto "+etqV+";\n";
                        c3d += "goto "+etqF+";\n";
                         
                        RESULT = new NodoC3D(c3d,etqV,etqF);
                    :}
			|	expresion:izq MENOR_IGUAL expresion:der
					{: 
                        String etqV = ControlC3D.generarETQ();
                        String etqF = ControlC3D.generarETQ();
                        String c3d = "if " + izq.getCad() + " <= " + der.getCad() + " then goto "+etqV+";\n";
                        c3d += "goto "+etqF+";\n";
                         
                        RESULT = new NodoC3D(c3d,etqV,etqF); 
                    :}
            | 	expresion:izq
            	{:
            		RESULT = izq;
            	:}
            ;

expresion   ::= expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                         
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                         
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                         
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                         
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                         
                        RESULT = new NodoC3D(temp); 
                    :}
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                         
                        RESULT = new NodoC3D(temp); 
                    :}
            |   PAR_IZQ expresion3:exp PAR_DER   
                    {: 
                    	RESULT = exp;
                     :}
            |   ID:id           
                    {: 
                    	RESULT = new NodoC3D(id);
                     :}
            |   ENTERO:entero   
                    {: 
                    	RESULT = new NodoC3D(entero);
                     :}
            |   DECIMAL:decimal 
                    {: 
                    	RESULT = new NodoC3D(decimal);
                    :}
            ;